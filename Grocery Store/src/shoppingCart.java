
import java.util.ArrayList;




public class shoppingCart extends javax.swing.JFrame{

    /**
     * Creates new form shoppingCart
     */
    public shoppingCart() {
        initComponents();
        list.setListData(FoodOptions.foods.toArray(new String[FoodOptions.foods.size()]));
        cost.setText(Double.toString(Math.round(FoodOptions.subtotal * 100.00)/ 100.00));
        if (FoodOptions.foods.isEmpty()){
            checkout.setEnabled(false);
        }
        
        if (Double.parseDouble(cost.getText()) > 300){
            loadList.setEnabled(false); 
            checkout.setEnabled(false);
        }
        
        else{
            loadList.setEnabled(true); 
            checkout.setEnabled(true);
        }
        
        setDefaultCloseOperation(shoppingCart.DISPOSE_ON_CLOSE);
    }
 

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        cost = new javax.swing.JLabel();
        checkout = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        loadList = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        list = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Subtotal: $ ");

        cost.setText("jLabel2");

        checkout.setText("Checkout");
        checkout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkoutActionPerformed(evt);
            }
        });

        delete.setText("Delete item");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        loadList.setText("Load List");
        loadList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadListActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cost)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 136, Short.MAX_VALUE)
                .addComponent(delete)
                .addGap(32, 32, 32)
                .addComponent(loadList)
                .addGap(18, 18, 18)
                .addComponent(checkout)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cost)
                    .addComponent(checkout)
                    .addComponent(delete)
                    .addComponent(loadList))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        list.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(list);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jScrollPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 366, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    public void delete (){
        if (list.getSelectedIndex() != -1){
            int index = list.getSelectedIndex();
            System.out.println("Index Selected: " + index);
            String s = (String) list.getSelectedValue();
            System.out.println("Value Selected: " + s);
            String minus = "";
            String temp = FoodOptions.foods.get(index);
            if (index != -1) { 
                String numbers = "0123456789.";
                for (int k = 0; k < temp.length(); k++){
                    for (int i = 0; i < numbers.length(); i++){
                        if (temp.substring(k,k+1).contains(numbers.substring(i,i+1))){
                            minus = minus + numbers.substring(i,i+1);
                        }
                    }    
                }
                System.out.println(minus);
                double d = Double.parseDouble(minus);
                FoodOptions.subtotal = FoodOptions.subtotal - d;
                double rounded = Math.round(FoodOptions.subtotal * 100.00)/ 100.00;
                cost.setText(Double.toString(rounded));
                FoodOptions.foods.remove(index);
                list.setListData(FoodOptions.foods.toArray(new String[FoodOptions.foods.size()]));

                if (FoodOptions.foods.isEmpty()){
                    delete.setEnabled(false);
                    checkout.setEnabled(false);
                }
            }
        }
    }
    
    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        // TODO add your handling code here:
        delete();
        if (Double.parseDouble(cost.getText()) > 300){
            loadList.setEnabled(false); 
            checkout.setEnabled(false);
        }
        
        else{
            loadList.setEnabled(true); 
            checkout.setEnabled(true);
        }
    }//GEN-LAST:event_deleteActionPerformed
    
    private void loadListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadListActionPerformed
        // TODO add your handling code here:
        ArrayList<String> lines = new ArrayList();
        String currentDirectory = System.getProperty("user.dir");
        String fileName="grocerystore.txt";
        String filePath = currentDirectory + "/" + fileName;
        lines = SaveCart.readFile(filePath, true);
    
        list.setListData(lines.toArray(new String[lines.size()]));
        String hold = "";
        double t = 0;
        for (int x = 0; x < lines.size(); x++){
            FoodOptions.foods.add(lines.get(x));
            String temp = lines.get(x);
            String numbers = "0123456789.";
            for (int k = 0; k < temp.length(); k++){
                for (int i = 0; i < numbers.length(); i++){
                    if (temp.substring(k,k+1).contains(numbers.substring(i,i+1))){
                        hold = hold + numbers.substring(i,i+1);
                    }
                }             
            }
            System.out.println(hold);
            t = t + Double.parseDouble(hold);
            hold = "";
        }
        System.out.println(t);
        FoodOptions.subtotal = FoodOptions.subtotal + t;
        double rounded = Math.round(FoodOptions.subtotal * 100.00)/ 100.00;
        cost.setText(Double.toString(rounded));
        
        list.setListData(FoodOptions.foods.toArray(new String[FoodOptions.foods.size()]));
        
        if (Double.parseDouble(cost.getText()) > 300){
            loadList.setEnabled(false); 
            checkout.setEnabled(false);
        }
        
        
    }//GEN-LAST:event_loadListActionPerformed

    private void checkoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkoutActionPerformed
        // TODO add your handling code here:    
        setVisible(false);
        Checkout c = new Checkout();
        c.setVisible(true);
    }//GEN-LAST:event_checkoutActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(shoppingCart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(shoppingCart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(shoppingCart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(shoppingCart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new shoppingCart().setVisible(true);
                
            }
        });
    }
    
    public javax.swing.JList<String> getList() {
        return list;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton checkout;
    private javax.swing.JLabel cost;
    private javax.swing.JButton delete;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<String> list;
    private javax.swing.JButton loadList;
    // End of variables declaration//GEN-END:variables

}
